import /init.watchdog.rc

on early-init
    start ueventd

on init
    export PATH /sbin
    export ANDROID_ROOT /system
    export ANDROID_DATA /data
    export EXTERNAL_STORAGE /sdcard

    symlink /system/etc /etc

    mkdir /sdcard
    mkdir /system
    mkdir /data
    mkdir /cache
   
    mount ext4 /dev/block/mmcblk0p10 /temp_data
    mkdir /temp_data/recovery_tmp 0775 root shell
    symlink /temp_data/recovery_tmp /tmp

on boot
    ifup lo
    hostname localhost
    domainname localdomain

    # USB settings to allow charging, but not to be declare as Fastboot Device
    setprop sys.usb.config charging
    class_start default
    class_start pre-core
    class_start core

    # reset counter watchdog at the end of system boot
    write /sys/devices/virtual/misc/watchdog/counter "0"

    write /sys/class/android_usb/android0/enable 0
    write /sys/class/android_usb/android0/idVendor 8087
    write /sys/class/android_usb/android0/idProduct 09f2
    write /sys/class/android_usb/android0/functions mass_storage,adb
    write /sys/class/android_usb/android0/enable 1

service ueventd /sbin/ueventd
    critical

service recovery /sbin/recovery

service adbd /sbin/adbd recovery
    disabled

service killservices /sbin/killservices.sh
    oneshot

# Always start adbd on userdebug and eng builds
on property:ro.debuggable=1
    #write /sys/class/android_usb/android0/enable 1
    #start adbd
    setprop service.adb.root 1

# Restart adbd so it can run as root
on property:service.adb.root=1
    write /sys/class/android_usb/android0/enable 0
    restart adbd
    write /sys/class/android_usb/android0/enable 1
